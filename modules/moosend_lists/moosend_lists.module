<?php

/**
 * Implements hook_menu().
 *
 */
function moosend_lists_menu() {
  $items = array();
   $items['admin/config/services/moosend/lists'] = array(
    'title' => 'Mailing Lists',
    'description' => 'Display Moosend Lists',
    'page callback' => 'moosend_lists_admin_page',
    'access callback' => 'moosend_api_is_ready',
    'access arguments' => array('administer moosend'),
    'file' => 'includes/moosend_lists.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/services/moosend/lists/add'] = array(
    'title' => 'Add a Mailing List',
    'description' => 'Add a new Moosend Mailing List.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('moosend_lists_add_lists_form'),
    'access callback' => 'moosend_api_is_ready',
    'access arguments' => array('administer moosend'),
    'file' => 'includes/moosend_lists.admin.inc',
    'type' => MENU_LOCAL_ACTION,
    'weight' => 5
  );

  $items['admin/config/services/moosend/lists/segment'] = array(
    'title' => 'Add Segments',
    'description' => 'Add a new Segment to Mailing List.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('moosend_lists_add_list_segments'),
    'access callback' => 'moosend_api_is_ready',
    'access arguments' => array('administer moosend'),
    'file' => 'includes/moosend_lists.admin.inc',
    'type' => MENU_LOCAL_ACTION,
    'weight' => 6
  );

  $items['admin/config/services/moosend/lists/clear_cache'] = array(
    'title' => 'Moosend lists clear cache',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('moosend_lists_clear_cache'),
    'access callback' => 'moosend_api_is_ready',
    'access arguments' => array('administer moosend'),
    'file' => 'includes/moosend_lists.admin.inc',
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/services/moosend/lists/delete/%'] = array(
    'title' => 'Moosend delete List',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('moosend_lists_delete',6),
    'access callback' => 'moosend_api_is_ready',
    'access arguments' => array('administer moosend'),
    'file' => 'includes/moosend_lists.admin.inc',
    'type' => MENU_CALLBACK,
  );

  return $items;
}



/**
 * Access callback for mailchimp submodule menu items.
 *
 */
function moosend_api_is_ready($permission) {
  if (moosend_initialize_api() && user_access($permission)) {
    return TRUE;
  }
  return FALSE;
}


/**
 * Implements hook_date_popup_process_alter().
 *
 */
function moosend_lists_date_popup_process_alter(&$element, $form_state, $context){
  if ($context['form']['#form_id'] === 'moosend_lists_add_list_segments') {
      $element['#theme_wrappers'] = array('form_element') ;
      unset($element['date']['#title']);
  }
}


/**
 * Implements hook_action_info().
 *
 */
function moosend_lists_action_info() {
  return array(
    'moosend_lists_member_action' => array(
      'label' => t('Moosend operations to members'),
      'type' => 'entity',
      'triggers' => array('any'),
      'configurable' => TRUE,
      'vbo_configurable' => TRUE,
    ),
  );
}


/**
 * Implements hook_views_bulk_operations_form().
 *
 * Configuration option for adding VBO action
 *
 */
function moosend_lists_member_action_views_bulk_operations_form($options, $entity_type, $dom_id) {

  $operations = _moosend_member_operations();
  $form['moosend_operation'] = array(
    '#type' => 'select',
    '#title' => t('Select Moosend Operations'),
    '#options' => $operations,
    '#default_value' => isset($options['moosend_operation']) ? $options['moosend_operation'] : $operations[0],
  );

  $list_options = array();
  foreach (moosend_get_active_lists_details() as $key => $list) {
    $list_options[$key] = $list['Name'];
  }

  $form['moosend_list'] = array(
    '#type' => 'select',
    '#title' => t('Select Moosend Mailing List'),
    '#options' => $list_options,
    '#default_value' => isset($options['moosend_list']) ? $options['moosend_list'] : $list_options[0],
  );

  return $form;
}


/**
 * An action configuration form for Moosend Operations
 *
 */
function moosend_lists_member_action_form($settings, &$form_state) {
  $form = array();
  $list_id = $settings['settings']['moosend_list'];
  $operation = $settings['settings']['moosend_operation'];
  $list_custom_fields = moosend_get_active_list_custom_fields($list_id);

  $form['#tree'] = TRUE;

  $list = moosend_get_active_lists_details(1,10, $list_id);
  $form['mailing_list_fields'] = array(
      '#prefix' => '<div>' . t('You have selected to perform the Moosend operation <b>@operation</b> in the mailing list "@list_name".',
        array('@operation' => ucfirst($operation), '@list_name' => $list['Name'])),
      '#suffix' => '</div>',
  );

 //Search for custom fields only for Subscribe operations
 if ($operation === 'Subscribe') {
    if (!empty($list_custom_fields)) {
        foreach ($list_custom_fields as $key => $field) {
          $form['custom_fields'][$field->Name] = array(
            '#type' => 'textfield',
            '#title' => check_plain($field->Name),
            '#required' => var_export($field->IsRequired, TRUE) === 'true' ? TRUE : FALSE,
            '#disabled' => var_export($field->IsRequired, TRUE) === 'true' ? TRUE : FALSE,
        );
      }

      $form['moosend_replacements_patterns']['token_tree'] = array(
        '#type' => 'fieldset',
        '#title' => t('Replacement patterns'),
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#description' => theme('token_tree', array('token_types' => array('user'), 'global_types' => NULL)),
      );

      $form['custom_fields_desc'] = array(
        '#prefix' => '<div class="description">' .t('Please provide some value for the fields above. Not required fields can be left blank.'),
        '#suffix' => '</div>',
      );

    }
    else
    {
      $form['custom_fields'] = array(
        '#prefix' => '<div id="custom-fields-wrapper">' . t('No specified fields for this list.'),
        '#suffix' => '</div>',
      );
    }
  }

  return $form;
}


/**
 *  Submit Callback
 *
 */
function moosend_lists_member_action_submit($form, &$form_state) {
  return $form_state['values'];
}


/**
 * Action Callback for Moosend operations
 *
 * @param &$entity
 * @param $context
 * @return
 */
function moosend_lists_member_action(&$entity, $context) {
  if ($context['entity_type'] == 'user') {

    //Replace tokens to custom fields
    if (isset($context['custom_fields'])) {
      foreach ($context['custom_fields'] as $key => &$value) {
        if (strpos($value, '[user:') !== false) {
          $value = token_replace($value, array('user' => $entity), array('clear', TRUE));
        }
      }
    }
    if ($context['settings']['moosend_operation'] == 'Subscribe') {
      $args = array(
        $context['settings']['moosend_list'],
        $entity->mail,
        $entity->name,
        $context['custom_fields'],
        $context['settings']['moosend_operation']
      );
    }
    else {
      $args = array(
        $context['settings']['moosend_list'],
        $entity->mail,
        $context['settings']['moosend_operation']
      );
    }

    moosend_pre_operate_member($args);
  }
}
